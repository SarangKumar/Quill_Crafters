generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  user_id      Int         @id @default(autoincrement())
  username     String
  email        String      @unique
  avatar       String?
  isAuthor     Boolean     @default(false)
  bio          String?
  plan         PLAN        @default(FREE)
  join_date    DateTime    @default(now())
  updated_date DateTime    @updatedAt
  comment      Comment[]
  rating       Rating[]
  favourite    Favourite[]
  novel        Novel[]
}

model Comment {
  comment_id Int      @id @default(autoincrement())
  user_id    Int
  novel_id   Int
  comment    String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [user_id])
  novel      Novel    @relation(fields: [novel_id], references: [novel_id])

  @@index([user_id])
  @@index([novel_id])
}

model Favourite {
  favourite_id Int      @id @default(autoincrement())
  user_id      Int
  novel_id     Int
  created_at   DateTime @default(now())
  user         User     @relation(fields: [user_id], references: [user_id])
  novel        Novel    @relation(fields: [novel_id], references: [novel_id])

  @@index([user_id])
  @@index([novel_id])
}

model Novel {
  novel_id       Int         @id @default(autoincrement())
  title          String
  summary        String
  cover          String?
  publication_at DateTime    @default(now())
  author_id      Int
  likes          Int         @default(0)
  genre          String
  comment        Comment[]
  favourite      Favourite[]
  chapter        Chapter[]
  rating         Rating[]
  author         User        @relation(fields: [author_id], references: [user_id])

  @@index([author_id])
}

// model Genere {
//   gener_id Int     @id @default(autoincrement())
//   name     String
//   novel    Novel[]
// }

model Chapter {
  chapter_id     Int      @id @default(autoincrement())
  novel_id       Int
  chapter_number Int
  chapter_title  String
  content        String
  created_at     DateTime @default(now())
  novel          Novel    @relation(fields: [novel_id], references: [novel_id])

  @@index([novel_id])
}

model Rating {
  rating_id  Int      @id @default(autoincrement())
  novel_id   Int
  user_id    Int
  rating     Int
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [user_id])
  novel      Novel    @relation(fields: [novel_id], references: [novel_id])

  @@index([novel_id])
  @@index([user_id])
}

model GenereToNovel {
  A Int
  B Int

  @@unique([A, B], map: "_GenereToNovel_AB_unique")
  @@index([B], map: "_GenereToNovel_B_index")
  @@map("_GenereToNovel")
}

enum PLAN {
  FREE
  BASIC
  PRO
  PREMIUM
}
